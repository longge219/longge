server:
  port: 8621
com:
  longge:
    server:
      serverName: jianglong #服务名
      port: 6677 #端口
      keepalive: true #Socket参数，连接保活，默认值为False。启用该功能时，TCP会主动探测空闲连接的有效性。可以将此功能视为TCP的心跳机制，需要注意的是：默认的心跳间隔是7200s即2小时。Netty默认关闭该功能
      reuseaddr: true #地址复用，默认值False。有四种情况可以使用：(1).当有一个有相同本地地址和端口的socket1处于TIME_WAIT状态时，而你希望启动的程序的socket2要占用该地址和端口，比如重启服务且保持先前端口。(2).有多块网卡或用IP Alias技术的机器在同一端口启动多个进程，但每个进程绑定的本地IP地址不能相同。(3).单个进程绑定相同的端口到多个socket上，但每个socket绑定的ip地址不同。(4).完全相同的地址和端口的重复绑定。但这只用于UDP的多播，不用于TCP。
      tcpNodelay: true #TCP参数，立即发送数据，默认值为True（Netty默认为True而操作系统默认为False）。该值设置Nagle算法的启用，改算法将小的碎片数据连接成更大的报文来最小化所发送的报文的数量，如果需要发送一些较小的报文，则需要禁用该算法。Netty默认禁用该算法，从而最小化报文传输延时。
      sndbuf: 10485760 # Socket参数，TCP数据发送缓冲区大小。
      revbuf: 10485760 # Socket参数，TCP数据接收缓冲区大小。
      read: 180 # 读超时时间
      write: 180 # 写超时时间
      readAndWrite: 180 # 读写超时时间
      backlog: 1024 #  Socket参数，服务端接受连接的队列长度，如果队列已满，客户端连接将被拒绝
      ssl: false # 使用ssl加密
      initalDelay: 10 # mqtt qos1 qos2 消息 重发延迟
      protocol: MQTT  # MQTT  MQTT_WS_MQTT(mqtt.js)   MQTT_WS_PAHO(paho.js)
      period: 10 # mqtt qos1 qos2 消息 重发周期
      jksFile:  /securesocket.jks # ssl 加密 jks文件地址
      jksStorePassword: mu$tch8ng3 # 读取jks密码
      jksCertificatePassword: inc0rrect # 读取私钥密码
      bossThread: 1  #用于处理客户端的连接请求
      workThread: 2  #用于处理与各个客户端连接的IO操作
logging:
  level:
    io.netty: debug

# spring 集成kafka配置
spring:
  kafka:
    producer:
      acks: all #表示所有broker都确认接收成功
      retries: 0
      batch-size: 16384   # 批处理大小
      buffer-memory: 33554432
      key-serializer: com.longge.plugins.kafka.fastjson.FastJsonSerializer
      value-serializer: com.longge.plugins.kafka.fastjson.FastJsonSerializer
      bootstrap-servers: 10.30.0.106:9092
      linger: 5 #延迟发送时间
      properties:  #配置sasl安全机制
        sasl.mechanism:  # PLAIN
        security.protocol: #  SASL_PLAINTEXT
        sasl.jaas.config: #  org.apache.kafka.common.security.plain.PlainLoginModule required username="xxxx" password="xxxx";
    consumer:
      auto-offset-reset: earliest # 表示kafka不持有当前offset时应当采用的策略
      key-deserializer: com.longge.plugins.kafka.fastjson.FastJsonDeserializer
      value-deserializer: com.longge.plugins.kafka.fastjson.FastJsonDeserializer
      group-id: jianglong
      bootstrap-servers: 10.30.0.106:9092
      topics: EQUIPCOMMAND  #消费多个主题用逗号分隔
      #配置sasl安全机制
      properties:
        sasl.mechanism: # PLAIN
        security.protocol: #  SASL_PLAINTEXT
        sasl.jaas.config: # corePoolSize org.apache.kafka.common.security.plain.PlainLoginModule required username="xxxx" password="xxxx";
# 生产成功消息配置
threadlistener:
  visibleLog: true
  listenerQueueSize: 100000
  corePoolSize: 1
  maxPoolSize: 50
  poolQueueCapacity: 500
  threadNamePrefix: data-report-kafka-send
  visiblePool: true